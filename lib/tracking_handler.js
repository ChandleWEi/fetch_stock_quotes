// Generated by CoffeeScript 1.3.3
(function() {
  var date_utils, env, redis, tracking;

  env = require('./config/environment');

  redis = require('./redis_util').createClient();

  date_utils = require('date-utils');

  tracking = function(response, query) {
    var date, decoded_params, match, params, path, query_reg, query_str, today, url_key, user_id, user_key;
    response.writeHeader(200, {
      "Content-Type": "text/html"
    });
    query_str = decodeURIComponent(query).split(/^request_url=/)[1];
    query_reg = /([^?]+)\?query=(.*)&user_id=(.*)$/;
    console.log("query is " + query);
    match = query_reg.exec(query_str);
    if (match !== null) {
      path = match[1];
      params = match[2];
      user_id = match[3];
      console.log("origin path: " + path);
      console.log("origin params: " + params);
      console.log("origin user_id: " + user_id);
      if (path !== null) {
        if (params !== null) {
          decoded_params = {};
          decodeURIComponent(params).split('&').forEach(function(line) {
            var k, v, _ref;
            _ref = line.split('='), k = _ref[0], v = _ref[1];
            if (k && v) {
              return decoded_params[k] = v;
            }
          });
          if (decoded_params["page"] !== void 0) {
            path += "?page=" + decoded_params["page"];
          }
        }
        date = new Date();
        today = date.toFormat("YYYY-MM-DD");
        url_key = "" + env.redisNamespace + ":url:" + today;
        console.log("path: " + path);
        console.log("url_key: " + url_key);
        redis.zincrby(url_key, 1, path, function(err, response) {
          if (err) {
            return console.log("[redis error]: " + err);
          }
        });
        if (user_id) {
          user_key = "" + env.redisNamespace + ":u" + user_id + ":" + today;
          console.log("user_key: " + user_key);
          redis.zincrby(user_key, 1, path, function(err, response) {
            if (err) {
              return console.log("[redis error]: " + err);
            }
          });
        }
      }
    }
    return response.end();
  };

  exports.tracking = tracking;

}).call(this);
